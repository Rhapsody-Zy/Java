<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bilibili.mapper.BrandMapper">

    <!--sql 片段-->
    <!--<sql id="brand_column">
        id,brand_name as brandName, company_name as companyName, ordered, description, status
    </sql>-->

    <!--
    数据库表的字段名称和实体类的属性名称不一样，则不能自动封装数据
        *起别名：对不一样的列名起别名，让别名和实体类的属性名一样
            *缺点：每次查询都要定义一次别名
        *sq片段
            *缺点：不灵活
        *resultMap:
            1.定义<resultMap>标签
            2.在<select>标签中，使用resultMap属性替换resultType属性
-->

    <resultMap id="brandResultMap" type="com.bilibili.pojo.Brand">
        <result column="brand_name" property="brandName" />
        <result column="company_name" property="companyName" />
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select
        *
        from tb_brand;
    </select>

    <!--参数占位符：
        1.#{}：会将其替换为？，为了防止SQL注入
        2.${}：拼sql。会存在SQL注入问题
        3.使用时机：
            *参数传递的时候：#{}
            *表名或者列名不固定的情况下：S{}会存在SQL注入问题
    -->

    <select id="selectById" parameterType="int" resultMap="brandResultMap">
        select * from tb_brand where id = #{id};
    </select>

    <!--<select id="selectByCondition" resultMap="brandResultMap">
        select
        *
        from tb_brand
        where
            status = #{status}
            and company_name like #{companyName}
            and brand_name like #{brandName}
    </select>-->

    <!--动态条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select
        *
        from tb_brand
        <!--where 1 = 1-->
        <where>
            <if test="status != null" >
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>

    <!--单条件查询-->
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select * from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != ''">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>

    <!--添加数据-->
    <!--useGeneratedKeys="true" keyProperty="id" 设置主键返回-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name,company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>

    <!--修改数据-->
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};
    </update>

    <!--删除数据-->
    <delete id="deleteById">
        delete from tb_brand
        where id = #{id};
    </delete>

    <!--批量删除-->
    <!--mybatis会将数组参数，封装成一个map集合
        默认是"array" = 数组
        也可以通过@Param注解改变map集合的默认key名称-->
    <delete id="deleteByIds">
        delete from tb_brand
        where id
        in (
            <foreach collection="ids" item="id" separator=",">
                #{id}
            </foreach>
        );
    </delete>


</mapper>