Set系列集合
    无序、不重复、无索引

Set实现类
    HashSet：无序、不重复、无索引
    LinkedHashSet：有序、不重复、无索引
    TreeSet：可排序、不重复、无索引

哈希值
    ○根据hashCode方法算出来的int类型的整数
    ○该方法定义在Object类中，所有对象都可以调用，默认使用地址值进行计算
    ○一般情况下，会重写hashCode方法，利用对象内部的属性值计算哈希值对象的
哈希值特点
    ○如果没有重写hashCode方法，不同对象计算出的哈希值是不同的
    ○如果已经重写hashcode方法，不同的对象只要属性值相同，计算出的哈希值就是一样的
    ○在小部分情况下，不同的属性值或者不同的地址值计算出来的哈希值也有可能一样。（哈希碰撞）

HashSet底层原理
    HashSet集合底层采取哈希表存储数据
    哈希表是一种对于增删改查数据性能都比较好的结构

    哈希表的组成
        JDK8以前：数组+链表
        JDK8以后：数组+链表+红黑树

    哈希表的存入
        创建一个默认长度16，默认加载因子为0.75的数组，数组名table（当列表中的元素达到16*0.75的时候，自动扩容两倍）
        根据元素的哈希值跟数组的长度计算出应存入的位置
        判断当前位置是否为null，如果是null直接存入
        如果位置不为null，表示有元素，则调用equals方法比较属性值
            一样：不存
            不一样：存入数组，形成链表
        JDK8以前：新元素存入数组，老元素挂在新元素下面
        JDK8以后：新元素直接挂在老元素下面
            当链表的长度大于8并且数组长度大于64时，链表将自动转化为红黑树，用于提升效率
        如果集合中存储的是自定义对象是，必须重写equals和hashCode方法

LinkedHashSet底层原理
    有序：存取的顺序是一致的
    原理：底层还是使用哈希表存储，只不过比哈希表多了一个双链表，这个双链表在存储时记录了存储的顺序

TreeSet
    对添加的元素进行排序，默认升序排序
    默认排序规则：
        对于数值类型：Integer，Double，默认按照从小到大的顺序排序
        对于字符、字符串类型：按照字符在ASCII码表中的数字进行排序
